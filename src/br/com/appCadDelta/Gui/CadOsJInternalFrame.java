/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.appCadDelta.Gui;

import br.com.appCadDelta.JPAConttroller.AparelhoJpaController;
import br.com.appCadDelta.JPAConttroller.ClienteJpaController;
import br.com.appCadDelta.JPAConttroller.OrdemServicoJpaController;
import br.com.appCadDelta.entity.Aparelho;
import br.com.appCadDelta.entity.Cliente;
import br.com.appCadDelta.entity.Ordemservico;
import br.com.appCadDelta.relatorio.Relatorio;
import br.com.appCadDelta.util.LimitadorMoeda;
import java.awt.Color;
import java.io.FileNotFoundException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Maiquel
 */
public class CadOsJInternalFrame extends javax.swing.JInternalFrame {

    private DefaultComboBoxModel comboClienteModel;
    private DefaultListModel<Ordemservico> listModelOs;
    private DefaultListModel listModelAparelho;
    private Cliente cliente;
    private Aparelho aparelho;
    private Ordemservico os;
    private boolean newOs = false;
    private boolean newAparelho = false;

    /**
     * Creates new form CadOsJInternalFrame
     */
    public CadOsJInternalFrame() {
        super("Cadastro de Ordem de Serviço");

        listModelOs = new DefaultListModel();
        OrdemServicoJpaController jpaOs = new OrdemServicoJpaController();
        for (Ordemservico os : jpaOs.findAll()) {
            listModelOs.addElement(os);
        }
        comboClienteModel = new DefaultComboBoxModel<Cliente>();
        comboClienteModel.addElement("                         " + " - " + 0);

        ClienteJpaController jpaCliente = new ClienteJpaController();
        List<Cliente> listCliente = jpaCliente.findAll();
        for (Cliente c : listCliente) {
            comboClienteModel.addElement(c.getNome() + " - " + c.getId());
        }

        listModelAparelho = new DefaultListModel<Aparelho>();
        initComponents();
        LimitadorMoeda limitador = new LimitadorMoeda();
        jTextValorOS.setDocument(limitador);
        //LimitadorMoeda.i = 0;
        //jTextValorOS.setText("0,00");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jListOs = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxCliente = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jTextRg = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextCpf = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextTelefone = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextCelular = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextEndereco = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListAparelho = new javax.swing.JList();
        jLabel8 = new javax.swing.JLabel();
        jTextModeloAparelho = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextSerialAparelho = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextMarcaAparelho = new javax.swing.JTextField();
        jTextDescricaoAparelho = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel15 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextObs = new javax.swing.JTextArea();
        jLabel17 = new javax.swing.JLabel();
        jButtonSalvarOs = new javax.swing.JButton();
        jButtonOsSalvar = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextDateEntrada = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextDataSaida = new javax.swing.JTextField();
        jButtonNovoAparelho = new javax.swing.JButton();
        jButtonSalvarAp = new javax.swing.JButton();
        jButtonDeleteAparelho = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jTextValorOS = new javax.swing.JTextField();
        jTextShowVlrOS = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jTextCidade = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);

        jListOs.setModel(listModelOs);
        jListOs.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListOsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListOs);

        jLabel1.setText("Cliente");

        jComboBoxCliente.setModel(comboClienteModel);
        jComboBoxCliente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxClienteItemStateChanged(evt);
            }
        });
        jComboBoxCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxClienteActionPerformed(evt);
            }
        });

        jLabel2.setText("RG");

        jLabel3.setText("CPF");

        jLabel4.setText("Telefone :");

        jTextTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextTelefoneActionPerformed(evt);
            }
        });

        jLabel6.setText("Celular");

        jLabel7.setText("Endereço");

        jListAparelho.setModel(listModelAparelho
        );
        jListAparelho.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListAparelhoValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jListAparelho);

        jLabel8.setText("Modelo");

        jLabel9.setText("Serial");

        jLabel10.setText("Marca");

        jLabel11.setText("Descrição");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Aparelho vinculado a OS:");

        jLabel13.setText("Cadastrado por");

        jLabel14.setText("Finalizado");

        jCheckBox1.setText("Autorizado");

        jCheckBox2.setText("Pronto");

        jLabel15.setText("Edit valor OS");

        jTextObs.setColumns(20);
        jTextObs.setRows(5);
        jScrollPane4.setViewportView(jTextObs);

        jLabel17.setText("obs:");

        jButtonSalvarOs.setText("Novo");
        jButtonSalvarOs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarOsActionPerformed(evt);
            }
        });

        jButtonOsSalvar.setText("Salvar");
        jButtonOsSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOsSalvarActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jLabel16.setText("Cidade");

        jLabel5.setText("Data Entrada");

        jTextDateEntrada.setEnabled(false);
        jTextDateEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextDateEntradaActionPerformed(evt);
            }
        });

        jLabel18.setText("Data Saida");

        jTextDataSaida.setEnabled(false);

        jButtonNovoAparelho.setText("Novo");
        jButtonNovoAparelho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoAparelhoActionPerformed(evt);
            }
        });

        jButtonSalvarAp.setText("Salvar");
        jButtonSalvarAp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarApActionPerformed(evt);
            }
        });

        jButtonDeleteAparelho.setText("Delete");
        jButtonDeleteAparelho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteAparelhoActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 0, 0));
        jLabel19.setText("O.S");

        jTextShowVlrOS.setForeground(new java.awt.Color(255, 0, 0));
        jTextShowVlrOS.setEnabled(false);

        jLabel20.setText("Valor do Orçamento");

        jButton2.setText("Imprimir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Garantia?");

        jButton3.setText("select");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(21, 21, 21)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(layout.createSequentialGroup()
                                .add(18, 18, 18)
                                .add(jLabel19))))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jButton3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jButton2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jSeparator1)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(layout.createSequentialGroup()
                                .add(9, 9, 9)
                                .add(jCheckBox1)
                                .add(21, 21, 21)
                                .add(jCheckBox2)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 122, Short.MAX_VALUE))
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 98, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel14))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(jTextField11)
                                    .add(jTextField12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 112, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jLabel17)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                        .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 228, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(12, 12, 12)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(layout.createSequentialGroup()
                                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel12)
                                    .add(layout.createSequentialGroup()
                                        .add(0, 0, Short.MAX_VALUE)
                                        .add(jButton1)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jButtonDeleteAparelho)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jButtonNovoAparelho, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 71, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jButtonSalvarAp))
                                    .add(layout.createSequentialGroup()
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                            .add(jLabel8)
                                            .add(jLabel10))
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                            .add(jTextModeloAparelho)
                                            .add(jTextMarcaAparelho, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 112, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                        .add(18, 18, 18)
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(jLabel11)
                                            .add(jLabel9))
                                        .add(25, 25, 25)
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                            .add(jTextSerialAparelho, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                                            .add(jTextDescricaoAparelho)))))
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel1)
                                    .add(jLabel2)
                                    .add(jLabel4)
                                    .add(jLabel7)
                                    .add(jLabel5))
                                .add(18, 18, 18)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jComboBoxCliente, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(layout.createSequentialGroup()
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                            .add(jTextTelefone, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                                            .add(jTextEndereco)
                                            .add(jTextRg)
                                            .add(jTextDateEntrada))
                                        .add(18, 18, 18)
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(jLabel6)
                                            .add(jLabel3)
                                            .add(jLabel16)
                                            .add(jLabel18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextDataSaida, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextCidade, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextCelular, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextCpf, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 127, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                        .add(0, 0, Short.MAX_VALUE))))))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jLabel15)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextValorOS, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 106, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(jButtonSalvarOs, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jButtonOsSalvar)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jButtonDelete)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jLabel20)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextShowVlrOS, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 106, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(20, 20, 20)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel1)
                                    .add(jComboBoxCliente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel2)
                                    .add(jTextRg, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel3)
                                    .add(jTextCpf, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel4)
                                    .add(jTextTelefone, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel6)
                                    .add(jTextCelular, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel16)
                                    .add(jTextCidade, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jTextEndereco, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel7))))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jLabel5)
                                .add(jTextDateEntrada, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jLabel18)
                                .add(jTextDataSaida, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(layout.createSequentialGroup()
                                .add(18, 18, 18)
                                .add(jLabel12)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel8)
                                    .add(jTextModeloAparelho, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel9)
                                    .add(jTextSerialAparelho, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jTextDescricaoAparelho, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel11)
                                    .add(jTextMarcaAparelho, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel10))
                                .add(15, 15, 15)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jButtonDeleteAparelho)
                                    .add(jButtonSalvarAp)
                                    .add(jButtonNovoAparelho)
                                    .add(jButton1)))
                            .add(layout.createSequentialGroup()
                                .add(5, 5, 5)
                                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                        .add(17, 17, 17)
                        .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel17)
                                    .add(jTextField11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel13))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel14)
                                    .add(jTextField12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jCheckBox1)
                                    .add(jCheckBox2)))))
                    .add(layout.createSequentialGroup()
                        .add(jLabel19)
                        .add(3, 3, 3)
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jButtonSalvarOs)
                        .add(jButtonOsSalvar)
                        .add(jButtonDelete)
                        .add(jButton2))
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel20)
                        .add(jTextShowVlrOS, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jTextValorOS, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel15)))
                    .add(layout.createSequentialGroup()
                        .add(17, 17, 17)
                        .add(jButton3)))
                .add(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextTelefoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextTelefoneActionPerformed

    private void jTextDateEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextDateEntradaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextDateEntradaActionPerformed

    private void jComboBoxClienteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxClienteItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxClienteItemStateChanged

    private void jComboBoxClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxClienteActionPerformed
        // TODO add your handling code here:
        String s = (String) jComboBoxCliente.getSelectedItem();
        String[] token = s.split("-");
        ClienteJpaController clienteJpa = new ClienteJpaController();
        cliente = clienteJpa.findById(new Integer(token[token.length - 1].replace(" ", "")));

        if (cliente == null) {
            cleanFieldsCliente();
        } else {
            jTextRg.setText(cliente.getRg());
            jTextCpf.setText(cliente.getCpf());
            jTextCelular.setText(cliente.getCelular());
            jTextTelefone.setText(cliente.getTelefone());
            jTextEndereco.setText(cliente.getEndereco());
            if (cliente.getCidadeId() != null) {
                jTextCidade.setText(cliente.getCidadeId().getNome());
            } else {
                jTextCidade.setText("NULL");
            }
        }
    }//GEN-LAST:event_jComboBoxClienteActionPerformed

    public void cleanFieldsCliente() {
        jTextRg.setText("");
        jTextCpf.setText("");
        jTextCelular.setText("");
        jTextTelefone.setText("");
        jTextEndereco.setText("");

    }

    private void jButtonSalvarApActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarApActionPerformed
        // TODO add your handling code here
        boolean errorMarcaAp;

        if (!newAparelho) {
            if (aparelho != null) {
                aparelho.setMarca(jTextMarcaAparelho.getText());
                aparelho.setModelo(jTextModeloAparelho.getText());
                aparelho.setSerial(jTextSerialAparelho.getText());
                aparelho.setDescricao(jTextDescricaoAparelho.getText());
                AparelhoJpaController aparelhoJpa = new AparelhoJpaController();
                aparelhoJpa.edit(aparelho);
                aparelhoJpa = null;
                JOptionPane.showMessageDialog(null, "Aparelho editado com sucesso!");

            }

        } else {

            Aparelho a = new Aparelho();


            if (jTextMarcaAparelho.getText().equals("")) {
                errorMarcaAp = true;
                jTextMarcaAparelho.setBackground(Color.RED);
            } else {
                errorMarcaAp = false;
                jTextMarcaAparelho.setBackground(Color.WHITE);
                a.setMarca(jTextMarcaAparelho.getText());
                a.setModelo(jTextModeloAparelho.getText());
                a.setSerial(jTextSerialAparelho.getText());
                a.setDescricao(jTextDescricaoAparelho.getText());
            }

            if (!errorMarcaAp) {
                JOptionPane.showMessageDialog(null, "Aparelho cadastrado com sucesso!");
                AparelhoJpaController aparelhoJpa = new AparelhoJpaController();
                aparelhoJpa.create(a);
                if (os.getListaAparelho() == null) {
                    List<Aparelho> listAp = new ArrayList<Aparelho>();
                    os.setListaAparelho(listAp);
                    os.getListaAparelho().add(a);
                } else {
                    os.getListaAparelho().add(a);
                }
                listModelAparelho.addElement(a.getId());
            } else {
                JOptionPane.showMessageDialog(null, "É preciso preencher ao menos o campo marca de aparelho!");
            }
        }
    }//GEN-LAST:event_jButtonSalvarApActionPerformed

    private void jButtonOsSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOsSalvarActionPerformed
        // TODO add your handling code here:
        if (newOs) {
            os.setObs(jTextObs.getText());
            os.setDataEntrada(new Date());
            if (!jTextValorOS.getText().equals("")) {
                Double vlrOrcamento = Double.parseDouble(jTextValorOS.getText().replace(",", "."));
                os.setTotalOrcamento(vlrOrcamento);
            }

            os.setClienteId(cliente);

            OrdemServicoJpaController osJpa = new OrdemServicoJpaController();

            System.out.println("lista de aparelho" + os.getListaAparelho());
            osJpa.create(os);
            listModelOs.addElement(os);
            jListOs.setModel(listModelOs);
        } else {

            cliente.setCpf(jTextCpf.getText());
            cliente.setRg(jTextRg.getText());
            cliente.setTelefone(jTextTelefone.getText());
            cliente.setCelular(jTextCelular.getText());
            cliente.setEndereco(jTextEndereco.getText());

            os.setClienteId(cliente);

            ClienteJpaController clienteJpa = new ClienteJpaController();
            clienteJpa.edit(cliente);

            if (!jTextValorOS.getText().equals("")) {
                Double vlrOrcamento = Double.parseDouble(jTextValorOS.getText().replace(",", "."));
                os.setTotalOrcamento(vlrOrcamento);
            }

            OrdemServicoJpaController osJpa = new OrdemServicoJpaController();
            osJpa.edit(os);
            JOptionPane.showMessageDialog(null, "OS " + os.getId() + " editada com sucesso!");
        }

    }//GEN-LAST:event_jButtonOsSalvarActionPerformed

    private void jListOsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListOsValueChanged
        // TODO add your handling code here
        //OrdemServico os = DAOFactory.getOrdemServicoRepositorio().findOsJoinCliente(new Integer(jListOs.getSelectedValue().toString()));
        newOs = false;
        OrdemServicoJpaController osJpa = new OrdemServicoJpaController();

        //os = osJpa.findById(new Integer(jListOs.getSelectedValue().toString()));


        if (jListOs.getSelectedValue() != null) {
            List<Ordemservico> osList = osJpa.findAparelhosByIdOS(new Integer(jListOs.getSelectedValue().toString()));
            if (osList != null) {
                if (osList.size() > 0) {
                    os = osList.get(0);
                    if (os.getTotalOrcamento() != null) {
                        String valorOrcamento = os.getTotalOrcamento().toString().replace(".", ",");
                        String[] vlr = valorOrcamento.split(",");
                        if (vlr[vlr.length - 1].length() == 1) {
                            valorOrcamento = valorOrcamento + "0";
                        }
                        LimitadorMoeda.i = 0;

                        jTextShowVlrOS.setText(valorOrcamento);
                        LimitadorMoeda.i = 0;
                        jTextValorOS.setText(valorOrcamento);
                        System.out.println("valor orçamento " + valorOrcamento);

                    } else {
                        jTextShowVlrOS.setText("");
                        LimitadorMoeda.i = 0;
                        jTextValorOS.setText("");
                        System.out.println("passei aqui");
                        //      LimitadorMoeda.i = 0;
                        //     jTextValorOS.setText("0,00");
                    }

                    jTextObs.setText(os.getObs());
                    if (os.getDataEntrada() != null) {
                        DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
                        jTextDateEntrada.setText(df.format(os.getDataEntrada()));
                    }else{
                        jTextDateEntrada.setText("NULL");
                    }
                    if (os.getDataSaida() != null) {
                        DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
                        jTextDataSaida.setText(df.format(os.getDataSaida()));
                    }else{
                        jTextDataSaida.setText("NULL");
                    }


                    for (int i = 0; i < comboClienteModel.getSize(); i++) {
                        String s = (String) comboClienteModel.getElementAt(i);
                        String[] token = s.split("-");
                        Integer it = new Integer(token[token.length - 1].replace(" ", ""));

                        if (os.getClienteId() != null) {
                            if (it.equals(os.getClienteId().getId())) {
                                jComboBoxCliente.setSelectedIndex(i);
                                break;
                            }
                        }
                    }

                    OrdemServicoJpaController osJPA = new OrdemServicoJpaController();

                    List<Aparelho> listAparelhoTemp = osJPA.findAparelhosByIdOS(os.getId()).get(0).getListaAparelho();
                    listModelAparelho = new DefaultListModel();
                    if (listAparelhoTemp.isEmpty()) {
                        listModelAparelho.removeAllElements();

                    }
                    for (int i = 0; i < listAparelhoTemp.size(); i++) {
                        if (!listModelAparelho.contains(listAparelhoTemp.get(i))) {
                            listModelAparelho.addElement(listAparelhoTemp.get(i));

                        }
                    }
                    jListAparelho.setModel(listModelAparelho);
                    cleanFieldsAparelho();
                }
            }
        }
    }//GEN-LAST:event_jListOsValueChanged

    private void jListAparelhoValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListAparelhoValueChanged
        // TODO add your handling code here:
        newAparelho = false;
        AparelhoJpaController aparelhoJpa = new AparelhoJpaController();

        if (jListAparelho.getSelectedValue() != null) {
            aparelho = aparelhoJpa.findById(
                    new Integer(jListAparelho.getSelectedValue().toString().replace(" ", "")));
        }
        if (aparelho != null) {
            jTextMarcaAparelho.setText(aparelho.getMarca());
            jTextModeloAparelho.setText(aparelho.getModelo());
            jTextSerialAparelho.setText(aparelho.getSerial());
            jTextDescricaoAparelho.setText(aparelho.getDescricao());
        }
    }//GEN-LAST:event_jListAparelhoValueChanged

    private void jButtonNovoAparelhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoAparelhoActionPerformed
        newAparelho = true;
        cleanFieldsAparelho();
        if (os != null) {
            if (newOs) {
                JOptionPane.showMessageDialog(null, "Insira o aparelho que sera vinculado a OS");
            } else {
                JOptionPane.showMessageDialog(null, "Insira o aparelho que sera vinculado a OS " + os.getId());
            }
        }
    }//GEN-LAST:event_jButtonNovoAparelhoActionPerformed

    public void cleanFieldsAparelho() {
        jTextMarcaAparelho.setText("");
        jTextModeloAparelho.setText("");
        jTextSerialAparelho.setText("");
        jTextDescricaoAparelho.setText("");

    }

    private void jButtonSalvarOsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarOsActionPerformed
        // TODO add your handling code here:
        newOs = true;
        jComboBoxCliente.setSelectedIndex(0);
        listModelAparelho = new DefaultListModel<Aparelho>();
        jListAparelho.setModel(listModelAparelho);
        os = new Ordemservico();
        cleanFieldsAparelho();
        JOptionPane.showMessageDialog(null, "Preencha os campos para inserir uma nova ordem de serviço!");

    }//GEN-LAST:event_jButtonSalvarOsActionPerformed

    private void jButtonDeleteAparelhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteAparelhoActionPerformed
        if (jListAparelho.getSelectedValue() == null) {
            JOptionPane.showMessageDialog(null, "É preciso selecionar um aparelho para deletalo!");
        } else {
            os.getListaAparelho().remove(aparelho);
            listModelAparelho.remove(new Integer(jListAparelho.getSelectedIndex()));

            jListAparelho.setModel(listModelAparelho);
        }

    }//GEN-LAST:event_jButtonDeleteAparelhoActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {

            if (os.getDataSaida() == null) {

                os.setDataSaida(new Date());
                OrdemServicoJpaController osJpa = new OrdemServicoJpaController();
                osJpa.edit(os);
                DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
                jTextDataSaida.setText(df.format(os.getDataSaida()));
            }
            // TODO add your handling code here:
            Relatorio relatorio = new Relatorio();
            relatorio.geraRelatorio(os.getId());
        } catch (FileNotFoundException ex) {
            Logger.getLogger(CadOsJInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        OrdemServicoJpaController osJpa = new OrdemServicoJpaController();
        osJpa.delete(os);
        listModelOs.removeElement(os);
        jListOs.setModel(listModelOs);
        JOptionPane.showMessageDialog(null, "Aparelho removido com sucesso!");

    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        String codStr = JOptionPane.showInputDialog(null, "Entre com o código do cliente:");
        boolean parseToNumber = true;

        try {
            Integer.parseInt(codStr);

        } catch (NumberFormatException e) {
            parseToNumber = false;
        }

        if (parseToNumber) {
            for (int i = 0; i < comboClienteModel.getSize(); i++) {
                String str = (String) comboClienteModel.getElementAt(i);
                String strComp[] = str.split("-");
                Integer intCod = Integer.parseInt(strComp[1].replace(" ", ""));

                if (codStr.equals(intCod.toString())) {
                    System.out.println("codStr " + strComp[1]);
                    jComboBoxCliente.setSelectedIndex(Integer.parseInt(codStr));
                }
            }
        }else{
            JOptionPane.showMessageDialog(null, "É necessário digitar um código valido para selecionar o cliente!");
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonDeleteAparelho;
    private javax.swing.JButton jButtonNovoAparelho;
    private javax.swing.JButton jButtonOsSalvar;
    private javax.swing.JButton jButtonSalvarAp;
    private javax.swing.JButton jButtonSalvarOs;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox jComboBoxCliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jListAparelho;
    private javax.swing.JList jListOs;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextCelular;
    private javax.swing.JTextField jTextCidade;
    private javax.swing.JTextField jTextCpf;
    private javax.swing.JTextField jTextDataSaida;
    private javax.swing.JTextField jTextDateEntrada;
    private javax.swing.JTextField jTextDescricaoAparelho;
    private javax.swing.JTextField jTextEndereco;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextMarcaAparelho;
    private javax.swing.JTextField jTextModeloAparelho;
    private javax.swing.JTextArea jTextObs;
    private javax.swing.JTextField jTextRg;
    private javax.swing.JTextField jTextSerialAparelho;
    private javax.swing.JTextField jTextShowVlrOS;
    private javax.swing.JTextField jTextTelefone;
    private javax.swing.JTextField jTextValorOS;
    // End of variables declaration//GEN-END:variables
}
