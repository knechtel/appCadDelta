/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.appCadDelta.Gui;

import br.com.appCadDelta.JPAConttroller.AparelhoJpaController;
import br.com.appCadDelta.entity.Aparelho;
import br.com.appCadDelta.entity.Ordemservico;
import br.com.appCadDelta.util.SessionDesktop;
import br.com.appCadDelta.util.Util;
import java.awt.Color;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author maiquelknechtel
 */
public class CadGarantiaJInternalFrame extends javax.swing.JInternalFrame {

    private Aparelho aparelho;

    /**
     * Creates new form CadGarantiaJInternalFrame
     */
    public CadGarantiaJInternalFrame() {
        super("Garantia Os = "+SessionDesktop.getOs().getId());
        initComponents();
        aparelho = SessionDesktop.getAparelho();

        if (aparelho != null) {
            if (aparelho.getDataEntradaRetorno() != null) {
                DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
                jTextDataRetornoEntrada.setText(df.format(aparelho.getDataEntradaRetorno()));
            }
        }

        if (aparelho != null) {
            if (aparelho.getSaidaRetorno() != null) {
                DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
                jTextSaidaRetorno.setText(df.format(aparelho.getSaidaRetorno()));
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextDataRetornoEntrada = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextSaidaRetorno = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setClosable(true);

        jLabel1.setText("Data entrada");

        jLabel2.setText("Data Saida");

        jTextSaidaRetorno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextSaidaRetornoActionPerformed(evt);
            }
        });

        jButton1.setText("salvar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextDataRetornoEntrada)
                    .addComponent(jTextSaidaRetorno, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextDataRetornoEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextSaidaRetorno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextSaidaRetornoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextSaidaRetornoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextSaidaRetornoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        boolean erroDataEntrada = false;
        boolean erroDataSaida = false;

        try {
            // TODO add your handling code here:
            if (!jTextDataRetornoEntrada.getText().equals("")) {
                aparelho.setDataEntradaRetorno(Util.sringToDate(jTextDataRetornoEntrada.getText()));
                erroDataEntrada = false;
                jTextDataRetornoEntrada.setBackground(Color.white);
            }
        } catch (Exception ex) {
            erroDataEntrada = true;
            jTextDataRetornoEntrada.setBackground(Color.red);
        }
        try {
            if (!jTextSaidaRetorno.getText().equals("")) {
                aparelho.setSaidaRetorno(Util.sringToDate(jTextSaidaRetorno.getText()));
                jTextSaidaRetorno.setBackground(Color.white);
                erroDataSaida = true;
            }
        } catch (Exception e) {
            jTextSaidaRetorno.setBackground(Color.red);
            erroDataSaida = true;
        }
        AparelhoJpaController aparelhoJpa = new AparelhoJpaController();

        if (erroDataEntrada == false & erroDataSaida == false) {
            aparelhoJpa.edit(aparelho);
            JOptionPane.showMessageDialog(null, "Garantia cadastrada com sucesso!");
        } else {
            JOptionPane.showMessageDialog(null, "Campo inv√°lido!");
        }

    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextDataRetornoEntrada;
    private javax.swing.JTextField jTextSaidaRetorno;
    // End of variables declaration//GEN-END:variables
}
